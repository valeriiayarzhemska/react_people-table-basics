{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/NavigationLink/NavigationLink.tsx","components/NavigationBar/NavigationBar.tsx","components/Loader/Loader.tsx","components/PeopleLink/PeopleLink.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","helpers/helpers.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","NavigationLink","props","link","title","to","isActive","classNames","NavigationBar","role","Loader","PeopleLink","person","name","sex","slug","PeopleTable","people","personId","map","born","died","motherName","fatherName","mother","father","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","findParent","find","PeoplePage","useState","setPeople","hasError","setHasError","isLoading","setIsLoading","useParams","useEffect","getPeopleFromServer","peopleFromServer","peopleWithParents","hasNoPeople","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2e553ca1.chunk.js","sourcesContent":["import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  link: string;\n  title: string;\n};\n\nexport const NavigationLink: FC<Props> = (props) => {\n  const {\n    link,\n    title,\n  } = props;\n\n  return (\n    <NavLink\n      to={link}\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { NavigationLink } from '../NavigationLink';\n\nexport const NavigationBar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLink\n          link=\"/\"\n          title=\"Home\"\n        />\n\n        <NavigationLink\n          link=\"/people\"\n          title=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport { Person } from '../../types';\n\nexport type Props = {\n  person: Person,\n};\n\nexport const PeopleLink: FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PeopleLink } from '../PeopleLink';\n\nexport type Props = {\n  people: Person[],\n  personId: string,\n};\n\nexport const PeopleTable: FC<Props> = (props) => {\n  const {\n    people,\n    personId,\n  } = props;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n            mother,\n            father,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={classNames({\n                'has-background-warning': slug === personId,\n              })}\n            >\n              <td>\n                <PeopleLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {mother ? (\n                  <PeopleLink person={mother} />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {father ? (\n                  <PeopleLink person={father} />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const findParent = (\n  people: Person[],\n) => (\n  people.map(person => ({\n    ...person,\n    mother: people.find((mother) => mother.name === person.motherName) || null,\n    father: people.find((father) => father.name === person.fatherName) || null,\n  }))\n);\n","import { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Loader } from '../Loader/Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { findParent } from '../../helpers/helpers';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    const getPeopleFromServer = async () => {\n      setIsLoading(true);\n      setHasError(false);\n\n      try {\n        const peopleFromServer = await getPeople();\n        const peopleWithParents = findParent(peopleFromServer);\n\n        setPeople(peopleWithParents);\n      } catch {\n        setHasError(true);\n      }\n\n      setIsLoading(false);\n    };\n\n    getPeopleFromServer();\n  }, []);\n\n  const hasNoPeople = people.length <= 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (\n            <>\n              {hasError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {hasNoPeople && !hasError && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!hasNoPeople && !hasError && (\n                <PeopleTable people={people} personId={slug} />\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { NavigationBar } from './components/NavigationBar';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavigationBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<HomePage />}\n          />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={<NotFoundPage />}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}